import streamlit as st
from transformers import pipeline
import nest_asyncio

# ุนูุดุงู ูุญู ูุดููุฉ event loop ูุน Streamlit
nest_asyncio.apply()

# ุชุญููู ุงููููุฐุฌ ูู Hugging Face ุจุงุณุชุฎุฏุงู ุงูุชููู
@st.cache_resource
def load_qa_pipeline():
    return pipeline(
        "question-answering",
        model="mohammed-elkomy/quran-qa",
        tokenizer="mohammed-elkomy/quran-qa",
        use_auth_token=st.secrets["huggingface_token"]
    )

def app():
    

    qa_pipeline = load_qa_pipeline()

    st.title("๐ฌ ุงุณุฃู ุนู ุงููุฑุขู")
    st.markdown("ุฃูุชุจ ุฃู ุณุคุงู ูู ุนูุงูุฉ ุจุงููุฑุขู ุงููุฑูู ูุณูุญุงูู ูุณุงุนุฏุชู ูู ุงูุฅุฌุงุจุฉ ุนููู โจ")

    # ูุฏุฎู ุงูุณุคุงู ูู ุงููุณุชุฎุฏู
    question = st.text_input("โ ุณุคุงูู:", placeholder="ูุซุงู: ูู ุนุฏุฏ ุขูุงุช ุณูุฑุฉ ุงูุจูุฑุฉุ")

    # ุณูุงู ูุจุฏุฆู ุจุณูุท
    default_context = (
        "ุงููุฑุขู ุงููุฑูู ูู ูุชุงุจ ุงููู ุงูููุฒู ุนูู ุงููุจู ูุญูุฏ ุตูู ุงููู ุนููู ูุณููุ ููุชููู ูู 114 ุณูุฑุฉ. "
        "ูููุง ุณูุฑ ูููุฉ ููุฏููุฉุ ูุชุญุชูู ุงูุณูุฑ ุนูู ุขูุงุช ุชุชุญุฏุซ ุนู ุงูุนููุฏุฉุ ูุงูุนุจุงุฏุงุชุ ูุงููุนุงููุงุชุ "
        "ููุตุต ุงูุฃูุจูุงุกุ ูุงูุญููุ ูุงูููุงุนุธ."
    )

    # ููุง ุงููุณุชุฎุฏู ููุชุจ ุณุคุงู
    if question:
        with st.spinner("โณ ุฌุงุฑู ุงูุจุญุซ ุนู ุงูุฅุฌุงุจุฉ..."):
            try:
                result = qa_pipeline(question=question, context=default_context)
                st.success(f"โ ุงูุฅุฌุงุจุฉ: {result['answer']}")
            except Exception as e:
                st.error(f"ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุญุงููุฉ ุงูุฅุฌุงุจุฉ ุนูู ุณุคุงูู: {e}")

# ูู ุดุบุงูุฉ ุงูููู ุฏุง ููุญุฏู
if __name__ == "__main__":
    app()
